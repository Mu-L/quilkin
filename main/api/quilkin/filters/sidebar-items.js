initSidebarItems({"enum":[["Error","An error that occurred when attempting to create a [`Filter`] from a [`FilterFactory`]."]],"mod":[["capture",""],["compress",""],["concatenate_bytes",""],["debug",""],["firewall","Filter for allowing/blocking traffic by IP and port."],["load_balancer",""],["local_rate_limit",""],["matches",""],["metadata","Well known dynamic metadata used by Quilkin."],["prelude","Prelude containing all types and traits required to implement [`Filter`] and [`FilterFactory`]."],["token_router",""]],"struct":[["ConvertProtoConfigError","An error representing failure to convert a filterâ€™s protobuf configuration to its static representation."],["CreateFilterArgs","Arguments needed to create a new filter."],["FilterInstance","The value returned by [`FilterFactory::create_filter`]."],["FilterRegistry","Registry of all [`Filter`][crate::filters::Filter]s that can be applied in the system."],["FilterSet","A set of filters to be registered with a [`FilterRegistry`]."],["ReadContext","The input arguments to [`Filter::read`]."],["ReadResponse","The output of [`Filter::read`]."],["WriteContext","The input arguments to [`Filter::write`]."],["WriteResponse","The output of [`Filter::write`]."]],"trait":[["Filter","Trait for routing and manipulating packets."],["FilterFactory","Provides the name and creation function for a given [`Filter`]."]],"type":[["DynFilterFactory","An owned pointer to a dynamic [`FilterFactory`] instance."],["FilterMap","A map of [`FilterFactory::name`]s to [`DynFilterFactory`] values."]]});